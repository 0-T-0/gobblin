apply plugin: 'java'
apply plugin: 'eclipse'

dependencies {
  if (project.hasProperty('useHadoop2')) {
    compile externalDependency.hadoopCommon
    compile externalDependency.hadoopClientCore
    compile externalDependency.hadoopHdfs
    compile externalDependency.hadoopAuth
  } else {
    compile externalDependency.hadoop
  }
  compile externalDependency.commonsLang
  compile externalDependency.hiveService
  compile externalDependency.hiveJdbc
  compile externalDependency.hiveMetastore
  compile externalDependency.hiveExec
  compile externalDependency.antlrRuntime
  compile externalDependency.derby
  compile externalDependency.jdo2
  compile externalDependency.datanucleusCore
  compile externalDependency.datanucleusRdbms
}


configurations {
  compile { transitive = true }
}

classification="library"

jar {
  destinationDir file("../build/gobblin-compaction/jar")
  def manifestClasspath = configurations.runtime.collect { "gobblin-compaction_lib/" + it.getName() }.join(' ')
  manifestClasspath = ". " + manifestClasspath
  manifest {
    attributes("Manifest-Version"       : "1.0",
    "Main-Class"             : "gobblin.compaction.CompactionRunner",
    "Class-Path"             : manifestClasspath
    )
  }
}

task createCompactionTar(type: Tar) {
  extension = 'tar.gz'
      baseName = project.name
      compression = Compression.GZIP

      into("gobblin-compaction_lib") { from configurations.runtime }
      into(".") { from "../build/gobblin-compaction/jar" }
      into(".") { from "../conf/log4j-compaction.xml" rename ('log4j-compaction.xml', 'log4j.xml')}
  }

createCompactionTar.dependsOn ':gobblin-compaction:jar'

artifacts {
    archives createCompactionTar
}